name: Azure ARM

on:
  push:
    branches: [ "feature2/psrule-conditional" ]

  workflow_dispatch:

jobs:
  PSRule-Analysis:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
    - uses: actions/checkout@v2

    - name: Check ACR Modules
      shell: pwsh
      run: |
        $file = "deployment/main.bicep"

        # Read the content of the file
        $fileContent = Get-Content -Path $file -Raw

        # Check if the file contains "module" and "br:vidalabacr.azurecr.io/bicep/"
        if ($fileContent -match 'module' -and $fileContent -match 'br:vidalabacr\.azurecr\.io/bicep/') {
            Write-Output "[PASS] Required ACR module is being used"
        }
        else {
            Write-Output "[FAIL]: Required ACR module is not been used'n RECOMMEND: Consider using the allowed modules "
            Write-Output "| RECOMMEND-TEST: Consider using the allowed modules"
            exit 1 
        }
                    
      # Log into Azure
    - name: Login to Azure  
      uses: azure/login@v1.4.3
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Run PSRule analysis
      uses: microsoft/ps-rule@v2.9.0
      with:
        version: '1.11.1'
        modules: 'PSRule.Rules.Azure'
 
  Preview-Bicep-Changes:
    needs: [PSRule-Analysis]
    runs-on: ubuntu-latest

    steps:
      # Checkout code
    - uses: actions/checkout@v2
                    
      # Log into Azure
    - name: Login to Azure  
      uses: azure/login@v1.4.3
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
  
    - name: Preview Changes from Bicep
      uses: Azure/deployment-what-if-action@v1.0.0
      with:
        subscription: ${{ secrets.AZURE_SUBSCRIPTION }} 
        resourceGroup: ${{ secrets.AZURE_RG }} 
        templateFile: deployment/main.bicep
        
  Deploy-Azure-from-ACR:
    environment: Deployment-POC
    needs: [Preview-Bicep-Changes]
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - uses: actions/checkout@main

    # Log into Azure
    - uses: azure/login@v1.4.3
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Deploy Bicep file
    - name: Deployment Bicep Resources
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: deployment/main.bicep
        #parameters: 'storagePrefix=mystore storageSKU=Standard_LRS'
        failOnStdErr: false